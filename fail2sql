#!/usr/bin/php
<?PHP

// Load settings file
require_once('settings.php');

// Parse script location
$home = realpath(dirname(__FILE__));
// Establish MySQL connection
$link = mysql_connect($mysqlhost, $mysqluser, $mysqlpass)
  or die('Could not connect: ' . mysql_error());
// Select database
mysql_select_db($mysqldatabase) or die('Could not select database');

// Parse arguments, otherwise show usage info
if (!empty($_SERVER["argv"][1])){
  $argument = $_SERVER["argv"][1];
} else {
  // Execute usage function
  print_help();
  exit;
}

// Check if argument is one of the switches below
// -l => list switch
if ($argument == "-l") {
  // Retrieve and display latest 50 entries from DB
  $query = "SELECT * FROM `$mysqldatabase` ORDER BY timestamp DESC LIMIT 50";
  $result = mysql_query($query) or die('Query failed: ' . mysql_error());
  while ($row = mysql_fetch_array($result)) {
    // Print each row
    echo $row['timestamp']." - ".$row['name']."(".$row['port']."/".$row['protocol'].") - ".$row['ip']." - ".$row['geo']."\n";
  }
  // Close MySQL connection
  mysql_close($link);
  exit;
// -c => clear database switch
}else if ($argument == "-c") {
  // Delete all entries in MySQL database
  $query = "DELETE FROM `$mysqldatabase`";
  $result = mysql_query($query) or die('Query failed: ' . mysql_error());
  echo "Resetting database\n";
  exit;
// -u => update Geo database
}else if ($argument == "-u") {
  exec("wget -O - http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz |zcat - > ".$home."/libs/GeoLiteCity.dat");
  exit;
// -h => help switch
}else if ($argument == "-h") {
  // Execute usage function
  print_help();
  exit;
}

// Check for additional arguments
if (!empty($_SERVER["argv"][2]) && !empty($_SERVER["argv"][3]) && !empty($_SERVER["argv"][4])) {
  // Arguments are no switches => Store values
  $protocol = $_SERVER["argv"][2]; // protocol is 2nd arg
  $port = $_SERVER["argv"][3]; // port is 3rd arg

  if (!preg_match('/^\d{1,5}$/', $port)) {
    $port = getservbyname($_SERVER["argv"][3], $protocol); // resolve service name to port
  }

  $ip = $_SERVER["argv"][4]; // IP is 4th arg
} else {
  print_help();
  exit;
}

// Include libraries
include($home."/libs/geoipcity.inc");
include($home."/libs/geoipregionvars.php");

// Lookup geo location
$geodb = geoip_open($home."/libs/GeoLiteCity.dat",GEOIP_STANDARD) or die ('Failed to open Geo Database');
$geoip = geoip_record_by_addr($geodb,$ip);

// Check Geo result
if ($geoip) {
  // If successfully resolved, add to DB with geo informations
  $query = "INSERT INTO `$mysqldatabase` (id, protocol, name, port, ip, longitude, latitude, country, geo, timestamp) values ('', '".$protocol."', '".$argument."', '".$port."', '".$ip."', '".$geoip->longitude."', '".$geoip->latitude."', '".$geoip->country_code."', '".$geoip->city.", ".$geoip->country_name."', '".date("Y-m-d H:i:s",time())."')";
}else {
  // Otherwise add without geo informations
  $query = "INSERT INTO `$mysqldatabase` (id, protocol, name, port, ip, longitude, latitude, country, geo, timestamp) values ('', '".$protocol."', '".$argument."', '".$port."', '".$ip."', '', '', '', '', '".date("Y-m-d H:i:s",time())."')";
}

// Execute query
$result = mysql_query($query) or die('Query failed: ' . mysql_error());

// Close MySQL connection
mysql_close($link);

// Function to show usage information
function print_help() {
  echo "Fail2SQL v1.0 by Jordan Tomkinson <jordan@moodle.com>\n";
  echo "Usage: ".$_SERVER["argv"][0]." [-h|-l|-c|-u]\n";
  echo "\t -h: This page\n";
  echo "\t -l: List entries in the database (max 50 showed)\n";
  echo "\t -c: Clear the database and start fresh\n";
  echo "\t -u: Update GeoIP database\n\n";
  exit;
}

?>

